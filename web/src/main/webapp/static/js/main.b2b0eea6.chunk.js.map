{"version":3,"sources":["pages/About.tsx","utils/i18.ts","localization/en.ts","localization/es.ts","localization/cs.ts","localization/de.ts","localization/it.ts","components/LocMenu.tsx","utils/Config.ts","services/auth.ts","components/BasicMenu.tsx","components/HouseTile.tsx","components/HouseList.tsx","pages/Houses.tsx","components/MenuDrawerLeft.tsx","pages/Login.tsx","pages/Registration.tsx","components/SmartMeterTile.tsx","components/SmartMeterList.tsx","pages/HousePage.tsx","components/HouseForm.tsx","pages/EditHouse.tsx","pages/AddHouse.tsx","pages/SmartMeterDetail.tsx","components/SmartMeterForm.tsx","pages/EditSmartMeter.tsx","pages/AddSmartMeter.tsx","components/ProtectedRoute.tsx","interfaces/StatisticsDTO.ts","pages/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["About","t","useTranslation","Typography","variant","align","resources","en","translation","about","title","description1","description2","git","creators","menu","home","app_name","houses","logout","login","register","open","edit","remove","add","nothing","house","off","on","addHouse","editHouse","houseForm","name","street","code","city","postCode","country","confirm","email","password","password_conf","already_registered","first_name","last_name","phone","err_invalid_email","err_password_required","err_confirm_password_required","err_password_not_same","err_first_name_required","err_last_name_required","err_invalid_phone","sign_in","new_user","invalid_credentials","dashboard","welcome_admin","all_time_statistics","all_time_total","all_time_average","user_stats_from","user_stats_to","get_statistics","table_username","table_total_spent","table_average_spent","rows_per_page","smartMeterForm","description","running","smartMeter","create","totalPowerConsumption","turnedOn","turnedOff","averagePowerConsumptionAtNight","averagePowerConsumptionInDay","powerSpentForDate","es","loading","err_pswds_match","cs","de","it","languageLabels","languages","flags","getSavedLng","localStorage","getItem","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","withTranslation","useState","anchorEl","setAnchorEl","language","setLanguage","changeLanguage","setItem","saveLng","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","style","color","Menu","id","keepMounted","Boolean","onClose","length","MenuItem","map","item","index","ListItemIcon","height","width","Config","urlRestBase","userHome","adminHome","tokenKey","UserContext","createContext","user","a","axios","method","url","data","userName","response","jwt","status","removeItem","confirmPassword","firstName","lastName","passwordConfirmation","getCurrentUser","jwtDecode","ex","returnModule","useStyles","makeStyles","theme","menuButton","marginRight","spacing","link","textDecoration","BasicMenu","classes","React","useContext","AppBar","position","Toolbar","className","to","Box","display","flexGrow","m","alignItems","justifyContent","IconButton","aria-label","anchorOrigin","vertical","horizontal","transformOrigin","window","location","href","minWidth","maxWidth","notRunning","backgroundColor","HouseTile","onRemove","history","useHistory","address","Card","CardContent","gutterBottom","component","CardActions","size","push","HouseList","Grid","container","direction","Houses","setHouses","useEffect","then","result","obj","smartMeters","handleOnRemove","updatedHouses","filter","disableElevation","red","fontSize","button","borderRadius","list","borderStyle","boxShadow","MenuDrawerLeft","setOpen","handleDrawerClose","edge","marginTop","Drawer","anchor","Divider","List","ListItem","divider","app","textAlign","minHeight","card","text","alignContent","flex","Login","setEmail","setPassword","errors","beErrors","setBEErrors","handleLoginEvent","auth","Alert","severity","TextField","error","helperText","label","type","fullWidth","autoComplete","margin","value","onChange","e","target","Registration","validate","temp","test","setErrors","Object","values","every","x","setConfirmPassword","setFirstName","setLastName","setPhone","SmartMeterTile","smartMeterDescription","cumulativePowerConsumption","SmartMeterList","HousePage","useParams","setHouse","setSmartMeters","console","log","updatedMeters","ButtonGroup","HouseForm","onSubmit","setName","setStreet","setCode","setCity","setPostCode","setCountry","xs","required","disabled","EditHouse","handleOnSubmit","AddHouse","portalUserId","SmartMeterDetail","smartMeterPowerSpentInDate","setSmartMeterPowerSpentInDate","Date","now","selectedDate","setSelectedDate","smartMeterStats","setSmartMeterStats","averageSpentPerDay","averageSpentPerNight","utils","DateFnsUtils","disableToolbar","format","date","day","getDate","month","getMonth","year","getFullYear","KeyboardButtonProps","undefined","SmartMeterForm","setSmartMeterDescription","isRunning","setIsRunning","Checkbox","checked","EditSmartMeter","setSmartMeter","powerConsumptionSinceLastLog","lastLogTakenAt","houseId","AddSmartMeter","useLocation","search","split","ProtectedRoute","role","exact","path","render","Component","other","props","pathname","state","from","Error","StatisticsDTO","totalSpent","averageSpent","statistics","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableHead","headCells","numeric","disablePadding","onRequestSort","TableHead","TableRow","headCell","TableCell","padding","sortDirection","TableSortLabel","active","property","visuallyHidden","createStyles","root","paper","marginBottom","table","border","clip","overflow","top","cardroot","bullet","transform","fontWeight","pos","getFromDate","toISOString","getToDate","Dashboard","setFrom","setTo","setStatistics","setRows","handleGetStatisticsEvent","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","rows","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","rowCount","TableBody","slice","row","fromToTotalSpent","fromToAverageSpent","colSpan","TablePagination","rowsPerPageOptions","count","labelRowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","ourTheme","createMuiTheme","App","Provider","Hidden","xsDown","smUp","Container","Register","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2b0eea6.chunk.js","sourcesContent":["\nimport React, { FC } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTranslation } from 'react-i18next';\n\n\nconst About: FC = () => {\n    const { t } = useTranslation();\n    return <div>\n        <br />\n        <Typography variant={\"h3\"} align={\"center\"}>\n            {t('about.title')}\n        </Typography>\n        <br />\n        <p>{t('about.description1')}</p>\n        <p>{t('about.description2')}</p>\n        <p><i>{t('about.creators')}</i></p>\n    </div>\n};\n\nexport default About\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport en from \"../localization/en\";\nimport es from \"../localization/es\";\nimport cs from \"../localization/cs\";\nimport de from \"../localization/de\";\nimport it from \"../localization/it\";\n\n/*\n author: Michaela Horváthová\n*/\nconst resources = {\n    en,\n    es,\n    cs,\n    de,\n    it,\n};\n\nexport const languageLabels: Array<string> = [\"EN\", \"ES\", \"CS\", \"DE\", \"IT\"];\n\nexport const languages: Array<string> = [\"en\", \"es\", \"cs\", \"de\", \"it\"];\n\nexport const flags: Array<string> = [\"gb\", \"es\", \"cz\", \"de\", \"it\"];\n\nexport const getSavedLng = () => {\n    return localStorage.getItem(\"lng\");\n};\n\nexport const saveLng = (lng: string) => {\n    return localStorage.setItem(\"lng\", lng);\n};\n\ni18n.use(initReactI18next).init({\n    resources,\n    lng: getSavedLng() || \"en\",\n    fallbackLng: \"en\", // default language, good for testing\n    interpolation: {\n        escapeValue: false,\n    },\n});\n\nexport default i18n;\n","/*\n author: Michaela Horváthová\n*/\n\nconst en = {\n    translation: {\n        about: {\n            title: \"Welcome to Smart Energy Monitoring System\",\n            description1:\n                \"This application was developed as a part of the PA165 Enterprise Applications in Java course at Masaryk University\",\n            description2:\n                \"The system will allow users to manage the smart meter devices at home. For a user, it will be possible to set different smart meters for the different houses they own/rent, and track the power consumption statistics over time that is collected automatically. They can track the power consumption of different devices in different time of the day (e.g., at night). They can also shut down the power to one of their houses through the system, when power is not needed. The power distribution company can consult the power consumption statistics over period of times of all the users registered into the system.\",\n            git:\n                \"The project is available at GitHub repository https://github.com/M-Horvathova/EnergyManagementSystem-PA165\",\n            creators:\n                \"Created by Michaela Horváthová, Patrik Valo, Martin Podhora, Matej Rišňovský, 2021\",\n        },\n        menu: {\n            home: \"Home\",\n            about: \"About\",\n            app_name: \"Smart Energy\",\n            houses: \"My Houses\",\n            logout: \"Logout\",\n            login: \"Login\",\n            register: \"Register\",\n        },\n        houses: {\n            houses: \"Houses\",\n            open: \"Open\",\n            edit: \"Edit\",\n            remove: \"Remove\",\n            add: \"Add house\",\n            nothing: \"Nothing to show\",\n        },\n        house: {\n            open: \"Open\",\n            edit: \"Edit\",\n            remove: \"Remove\",\n            add: \"Add meter\",\n            nothing: \"Nothing to show\",\n            off: \"Turn off\",\n            on: \"Turn on\"\n        },\n        addHouse: {\n            add: \"Add house\",\n        },\n        editHouse: {\n            edit: \"Edit house\",\n        },\n        houseForm: {\n            name: \"Name\",\n            street: \"Street\",\n            code: \"Code\",\n            city: \"City\",\n            postCode: \"Post Code\",\n            country: \"Country\",\n            confirm: \"Confirm\",\n        },\n        register: {\n            register: \"Register\",\n            email: \"Email\",\n            password: \"Password\",\n            password_conf: \"Confirm password\",\n            already_registered: \"Already registered\",\n            first_name: \"First name\",\n            last_name: \"Last name\",\n            phone: \"Phone\",\n            err_invalid_email: \"Invalid email\",\n            err_password_required: \"Password required\",\n            err_confirm_password_required: \"Password confirm required\",\n            err_password_not_same: \"Passwords are not the same\",\n            err_first_name_required: \"First name required\",\n            err_last_name_required: \"Last name required\",\n            err_invalid_phone: \"Invalid phone length\",\n        },\n        login: {\n            sign_in: \"Sign in\",\n            login: \"Login\",\n            email: \"Email\",\n            password: \"Password\",\n            new_user: \"New user?\",\n            register: \"Register here\",\n            invalid_credentials: \"You have filled invalid credentials\",\n        },\n \t\tdashboard: {\n            welcome_admin: \"Welcome admin\",\n            all_time_statistics: \"All-time statistics\",\n            all_time_total: \"All-time total (kW)\",\n            all_time_average: \"All-time average per log (kW)\",\n            user_stats_from: \"Statistics from\",\n            user_stats_to: \"Statistics to\",\n            get_statistics: \"Get statistics\",\n            table_username: \"User\",\n            table_total_spent: \"Total (kW)\",\n            table_average_spent: \"Average across all houses and smart meters (kW)\",\n            rows_per_page: \"Rows per page\",\n        },\n \t\tsmartMeterForm: {\n            description: \"Description\",\n            running: \"Turned on\",\n            confirm: \"Confirm\"\n        },\n        smartMeter: {\n            open: \"Open\",\n            edit: \"Edit\",\n            remove: \"Remove\",\n            create: \"Create\",\n            totalPowerConsumption: \"Total power consumption:\",\n            turnedOn: \"Turned on\",\n            turnedOff: \"Turned off\",\n            averagePowerConsumptionAtNight: \"Average power consumption at night\",\n            averagePowerConsumptionInDay: \"Average power consumption in day\",\n            powerSpentForDate: \"Show power spent for date\"\n        }\n    },\n};\n\nexport default en;\n","/*\n author: Michaela Horváthová\n*/\n\nconst en = {\n  translation: {\n    about: {\n      creators: \"Creado por Michaela Horváthová, Patrik Valo, Martin Podhora, Matej Rišňovský, 2021\",\n      description1: \"Esta aplicación fue desarrollada como parte del curso PA165 Enterprise Applications in Java en la Universidad Masaryk\",\n      description2: \"El sistema permitirá a los usuarios administrar los dispositivos de medidor inteligente en casa. Para un usuario, será posible establecer diferentes medidores inteligentes para las diferentes casas que poseen o alquilan, y realizar un seguimiento de las estadísticas de consumo de energía a lo largo del tiempo que se recogen automáticamente. Pueden realizar un seguimiento del consumo de energía de diferentes dispositivos en diferentes horas del día (por ejemplo, por la noche). También pueden apagar la energía de una de sus casas a través del sistema, cuando no se necesita energía. La compañía de distribución de energía puede consultar las estadísticas de consumo de energía durante períodos de tiempo de todos los usuarios registrados en el sistema.\",\n      git: \"El proyecto está disponible en el repositorio de GitHub https://github.com/M-Horvathova/EnergyManagementSystem-PA165\",\n      title: \"Bienvenido a Smart Energy Monitoring System\"\n    },\n    addHouse: {\n      add: \"Añadir casa\"\n    },\n    dashboard: {\n      all_time_average: \"Promedio de todos los tiempos por registro (kW)\",\n      all_time_statistics: \"Estadísticas de todos los tiempos\",\n      all_time_total: \"Total de todos los tiempos (kW)\",\n      get_statistics: \"Obtener estadísticas\",\n      rows_per_page: \"Filas por página\",\n      table_average_spent: \"Promedio en todas las casas y contadores inteligentes (kW)\",\n      table_total_spent: \"Total (kW)\",\n      table_username: \"Usuario\",\n      user_stats_from: \"Estadísticas de\",\n      user_stats_to: \"Estadísticas a\",\n      welcome_admin: \"Administrador de bienvenida\"\n    },\n    editHouse: {\n      edit: \"Editar casa\"\n    },\n    home: {\n      loading: \"Cargando…\"\n    },\n    house: {\n      add: \"Añadir medidor\",\n      edit: \"Editar\",\n      nothing: \"Nada que mostrar\",\n      off: \"Desactivar\",\n      on: \"Activar\",\n      open: \"Abrir\",\n      remove: \"Eliminar\"\n    },\n    houseForm: {\n      city: \"Ciudad\",\n      code: \"Código\",\n      confirm: \"Confirmar\",\n      country: \"País\",\n      name: \"Nombre\",\n      postCode: \"Código postal\",\n      street: \"Calle\"\n    },\n    houses: {\n      add: \"Añadir casa\",\n      edit: \"Editar\",\n      houses: \"Casas\",\n      nothing: \"Nada que mostrar\",\n      open: \"Abrir\",\n      remove: \"Eliminar\"\n    },\n    login: {\n      email: \"Correo Electrónico\",\n      invalid_credentials: \"Ha rellenado credenciales no válidas\",\n      login: \"Entrar\",\n      new_user: \"¿Es un nuevo usuario?\",\n      password: \"Contraseña\",\n      register: \"Regístrese aquí\",\n      sign_in: \"Iniciar sesión\"\n    },\n    menu: {\n      about: \"Información\",\n      app_name: \"Smart Energy\",\n      home: \"Inicio\",\n      houses: \"Mis Casas\",\n      login: \"Entrar\",\n      logout: \"Cerrar sesión\",\n      register: \"Registrarse\"\n    },\n    register: {\n      already_registered: \"Ya está registrado\",\n      email: \"Correo Electrónico\",\n      err_confirm_password_required: \"Se requiere confirmación de contraseña\",\n      err_first_name_required: \"Nombre requerido\",\n      err_invalid_email: \"Correo electrónico no válido\",\n      err_invalid_phone: \"Longitud de teléfono no válida\",\n      err_last_name_required: \"Se requiere apellido\",\n      err_password_not_same: \"Las contraseñas no son las mismas\",\n      err_password_required: \"Contraseña obligatoria\",\n      err_pswds_match: \"Las contraseñas no coinciden\",\n      first_name: \"Nombre\",\n      last_name: \"Apellido\",\n      password: \"Contraseña\",\n      password_conf: \"Confirmar contraseña\",\n      phone: \"Teléfono\",\n      register: \"Registrarse\",\n      sign_in: \"Iniciar sesión\"\n    },\n    smartMeter: {\n      averagePowerConsumptionAtNight: \"Consumo medio de energía por la noche\",\n      averagePowerConsumptionInDay: \"Consumo medio de energía en el día\",\n      create: \"Crear\",\n      edit: \"Editar\",\n      open: \"Abrir\",\n      powerSpentForDate: \"Mostrar energía gastada para la fecha\",\n      remove: \"Eliminar\",\n      totalPowerConsumption: \"Consumo total de energía:\",\n      turnedOff: \"Desactivado\",\n      turnedOn: \"Encendido\"\n    },\n    smartMeterForm: {\n      confirm: \"Confirmar\",\n      description: \"Descripción\",\n      running: \"Encendido\"\n    }\n  }\n} ;\n\nexport default en;","/*\n author: Michaela Horváthová\n*/\n\nconst en = {\n  translation: {\n    about: {\n      creators: \"Vytvořili Michaela Horváthová, Patrik Valo, Martin Podhora, Matej Rišňovský, 2021\",\n      description1: \"Tato aplikace byla vyvinuta jako součást předmětu PA165 Enterprise Applications in Java na Masarykově univerzitě\",\n      description2: \"Systém umožní uživatelům spravovat zařízení inteligentních měřičů doma. Pro uživatele bude možné nastavit různé inteligentní měřiče pro různé domy, které vlastní/pronajmou, a sledovat statistiky spotřeby energie v průběhu času, které se automaticky shromažďují. Mohou sledovat spotřebu energie různých zařízení v různé denní době (např. v noci). Mohou také vypnout napájení do jednoho ze svých domů prostřednictvím systému, když není potřeba napájení. Společnost pro distribuci elektrické energie může nahlédnout do statistik spotřeby elektrické energie v časovém období všech uživatelů registrovaných v systému.\",\n      git: \"Projekt je dostupný v úložišti GitHubu https://github.com/M-Horvathova/EnergyManagementSystem-PA165\",\n      title: \"Vítejte v aplikaci Smart Energy Monitoring System\"\n    },\n    addHouse: {\n      add: \"Přidat dům\"\n    },\n    dashboard: {\n      all_time_average: \"Průměr všech dob za log (kW)\",\n      all_time_statistics: \"Celkové statistiky\",\n      all_time_total: \"Celkové množství (kW)\",\n      get_statistics: \"Získat statistiky\",\n      rows_per_page: \"Řádků na stránku\",\n      table_average_spent: \"Průměr ve všech domech a inteligentních měřičích (kW)\",\n      table_total_spent: \"Celkem (kW)\",\n      table_username: \"Uživatel\",\n      user_stats_from: \"Statistiky z\",\n      user_stats_to: \"Statistiky do\",\n      welcome_admin: \"Vítejte administrátore\"\n    },\n    editHouse: {\n      edit: \"Upravit dům\"\n    },\n    home: {\n      loading: \"Načítání…\"\n    },\n    house: {\n      add: \"Přidat měřič\",\n      edit: \"Upravit\",\n      nothing: \"Nic k zobrazení\",\n      off: \"Vypnout\",\n      on: \"Zapnout\",\n      open: \"Otevřít\",\n      remove: \"Odebrat\"\n    },\n    houseForm: {\n      city: \"Město\",\n      code: \"Kód\",\n      confirm: \"Potvrdit\",\n      country: \"Země\",\n      name: \"Jméno\",\n      postCode: \"PSČ\",\n      street: \"Ulice\"\n    },\n    houses: {\n      add: \"Přidat dům\",\n      edit: \"Upravit\",\n      houses: \"Domy\",\n      nothing: \"Nic k zobrazení\",\n      open: \"Otevřít\",\n      remove: \"Odebrat\"\n    },\n    login: {\n      email: \"E-mail\",\n      invalid_credentials: \"Vyplnili jste neplatné přihlašovací údaje\",\n      login: \"Přihlásit se\",\n      new_user: \"Jste nový uživatel?\",\n      password: \"Heslo\",\n      register: \"Registrace\",\n      sign_in: \"Přihlásit se\"\n    },\n    menu: {\n      about: \"O aplikaci\",\n      app_name: \"Smart Energy\",\n      home: \"Domů\",\n      houses: \"Moje domy\",\n      login: \"Přihlásit se\",\n      logout: \"Odhlásit se\",\n      register: \"Registrovat se\"\n    },\n    register: {\n      already_registered: \"Jste již zaregistrováni?\",\n      email: \"E-mail\",\n      err_confirm_password_required: \"Vyžaduje se potvrzení hesla\",\n      err_first_name_required: \"Křestní jméno vyžadováno\",\n      err_invalid_email: \"Neplatný e-mail\",\n      err_invalid_phone: \"Neplatná délka telefonního čísla\",\n      err_last_name_required: \"Požadováno příjmení\",\n      err_password_not_same: \"Hesla nejsou stejná\",\n      err_password_required: \"Je vyžadováno heslo\",\n      err_pswds_match: \"Hesla se neshodují\",\n      first_name: \"Křestní jméno\",\n      last_name: \"Příjmení\",\n      password: \"Heslo\",\n      password_conf: \"Potvrdit heslo\",\n      phone: \"Telefon\",\n      register: \"Registrovat se\",\n      sign_in: \"Přihlásit se\"\n    },\n    smartMeter: {\n      averagePowerConsumptionAtNight: \"Průměrná spotřeba energie v noci\",\n      averagePowerConsumptionInDay: \"Průměrná spotřeba energie ve dne\",\n      create: \"Vytvořit\",\n      edit: \"Upravit\",\n      open: \"Otevřít\",\n      powerSpentForDate: \"Zobrazit spotřebu energie pro datum\",\n      remove: \"Odebrat\",\n      totalPowerConsumption: \"Celková spotřeba energie:\",\n      turnedOff: \"Vypnuto\",\n      turnedOn: \"Zapnuto\"\n    },\n    smartMeterForm: {\n      confirm: \"Potvrdit\",\n      description: \"Popis\",\n      running: \"Zapnuto\"\n    }\n  }\n} ;\n\nexport default en;","/*\n author: Michaela Horváthová\n*/\n\nconst en = {\n  translation: {\n    about: {\n      creators: \"Erstellt von Michaela Horváthová, Patrik Valo, Martin Podhora, Matej Rišňovský, 2021\",\n      description1: \"Diese Anwendung wurde im Rahmen des PA165 Enterprise Applications in Java Kurses an der Masaryk University entwickelt\",\n      description2: \"Das System ermöglicht es Benutzern, die Smart-Meter-Geräte zu Hause zu verwalten. Für einen Benutzer ist es möglich, verschiedene intelligente Zähler für die verschiedenen Häuser einzustellen, die er besitzt oder mietet, und die Stromverbrauchsstatistiken im Laufe der Zeit zu verfolgen, die automatisch erfasst werden. Sie können den Stromverbrauch verschiedener Geräte zu verschiedenen Tageszeiten (z. B. nachts) verfolgen. Sie können auch die Stromversorgung eines ihrer Häuser über das System abschalten, wenn keine Stromversorgung benötigt wird. Das Stromverteilungsunternehmen kann die Stromverbrauchsstatistik über den Zeitraum aller im System registrierten Benutzer einsehen.\",\n      git: \"Das Projekt ist im GitHub-Repository verfügbar https://github.com/M-Horvathova/EnergyManagementSystem-PA165\",\n      title: \"Willkommen bei Smart Energy Monitoring System\"\n    },\n    addHouse: {\n      add: \"Geben Sie einem Haus zu\"\n    },\n    dashboard: {\n      all_time_average: \"Allzeitdurchschnitt pro log (kW)\",\n      all_time_statistics: \"Statistiken aller Zeiten\",\n      all_time_total: \"Allzeit-Gesamtsumme (kW)\",\n      get_statistics: \"Statistiken abrufen\",\n      rows_per_page: \"Zeilen pro Seite\",\n      table_average_spent: \"Durchschnittlich in allen Häusern und Smartmetern (kW)\",\n      table_total_spent: \"Insgesamt (kW)\",\n      table_username: \"Benutzer\",\n      user_stats_from: \"Statistiken von\",\n      user_stats_to: \"Statistiken zu\",\n      welcome_admin: \"Willkommen Admin\"\n    },\n    editHouse: {\n      edit: \"Editiere Haus\"\n    },\n    home: {\n      loading: \"Wird geladen…\"\n    },\n    house: {\n      add: \"Meter hinzufügen\",\n      edit: \"Ändern\",\n      nothing: \"Keine Daten zum anzeigen\",\n      off: \"Ausschalten\",\n      on: \"Aktivieren\",\n      open: \"Öffnen\",\n      remove: \"Entfernen\"\n    },\n    houseForm: {\n      city: \"Stadt\",\n      code: \"Code\",\n      confirm: \"Bestätigen\",\n      country: \"Land\",\n      name: \"Name\",\n      postCode: \"Postleitzahl\",\n      street: \"Straße\"\n    },\n    houses: {\n      add: \"Geben Sie einem Haus zu\",\n      edit: \"Ändern\",\n      houses: \"Häuser\",\n      nothing: \"Keine Daten zum anzeigen\",\n      open: \"Öffnen\",\n      remove: \"Entfernen\"\n    },\n    login: {\n      email: \"E-Mail\",\n      invalid_credentials: \"Sie haben ungültige Anmeldedaten ausgefüllt\",\n      login: \"Anmelden\",\n      new_user: \"Neuer Benutzer?\",\n      password: \"Kennwort\",\n      register: \"Registrieren Sie sich\",\n      sign_in: \"Anmelden\"\n    },\n    menu: {\n      about: \"Über\",\n      app_name: \"Smart Energy\",\n      home: \"Startseite\",\n      houses: \"Meine Häuser\",\n      login: \"Anmelden\",\n      logout: \"Abmelden\",\n      register: \"Registrieren\"\n    },\n    register: {\n      already_registered: \"Bereits registriert\",\n      email: \"E-Mail\",\n      err_confirm_password_required: \"Passwort bestätigen erforderlich\",\n      err_first_name_required: \"Vorname erforderlich\",\n      err_invalid_email: \"Ungültige E-Mail\",\n      err_invalid_phone: \"Ungültige Telefonlänge\",\n      err_last_name_required: \"Nachname wird benötigt\",\n      err_password_not_same: \"Passwörter sind nicht das Gleiche\",\n      err_password_required: \"Passwort erforderlich\",\n      err_pswds_match: \"Kennwörter stimmen nicht überein\",\n      first_name: \"Vorname\",\n      last_name: \"Nachname\",\n      password: \"Kennwort\",\n      password_conf: \"Kennwort bestätigen\",\n      phone: \"Telefon\",\n      register: \"Registrieren\",\n      sign_in: \"Anmelden\"\n    },\n    smartMeter: {\n      averagePowerConsumptionAtNight: \"Durchschnittlicher Stromverbrauch in der Nacht\",\n      averagePowerConsumptionInDay: \"Durchschnittlicher Stromverbrauch am Tag\",\n      create: \"Erstellen\",\n      edit: \"Bearbeiten\",\n      open: \"Öffnen\",\n      powerSpentForDate: \"Anzeige der für das Datum verbrauchten Leistung\",\n      remove: \"Löschen\",\n      totalPowerConsumption: \"Gesamter Stromverbrauch:\",\n      turnedOff: \"Ausgeschaltet\",\n      turnedOn: \"Eingeschaltet\"\n    },\n    smartMeterForm: {\n      confirm: \"Bestätigen\",\n      description: \"Beschreibung\",\n      running: \"Eingeschaltet\"\n    }\n  }\n} ;\n\nexport default en;","/*\n author: Michaela Horváthová\n*/\n\nconst en = {\n  translation: {\n    about: {\n      creators: \"Creato da Michaela Horváthová, Patrik Valo, Martin Podhora, Matej Rišňovský, 2021\",\n      description1: \"Questa applicazione è stata sviluppata come parte del corso PA165 Enterprise Applications in Java presso l'Università di Masaryk\",\n      description2: \"Il sistema consentirà agli utenti di gestire i dispositivi smart meter a casa. Per un utente, sarà possibile impostare diversi contatori intelligenti per le diverse case che possiedono o affittano e tracciare le statistiche sui consumi energetici nel tempo che vengono raccolte automaticamente. Possono monitorare il consumo di energia di diversi dispositivi in diverse ore del giorno (ad esempio, di notte). Possono anche spegnere l'alimentazione di una delle loro case attraverso il sistema, quando non è necessaria l'alimentazione. La società di distribuzione di energia può consultare le statistiche sui consumi energetici nel periodo di tempo di tutti gli utenti registrati nel sistema.\",\n      git: \"Il progetto è disponibile presso il repository GitHub https://github.com/M-Horvathova/EnergyManagementSystem-PA165\",\n      title: \"Benvenuto in Smart Energy Monitoring System\"\n    },\n    addHouse: {\n      add: \"Aggiungi casa\"\n    },\n    dashboard: {\n      all_time_average: \"Media di tutti i tempi per log (kW)\",\n      all_time_statistics: \"Statistiche di tutti i tempi\",\n      all_time_total: \"Totale di tutti i tempi (kW)\",\n      get_statistics: \"Ottieni statistiche\",\n      rows_per_page: \"Righe per pagina\",\n      table_average_spent: \"Media su tutte le case e contatori intelligenti (kW)\",\n      table_total_spent: \"Totale (kW)\",\n      table_username: \"Utente\",\n      user_stats_from: \"Statistiche da\",\n      user_stats_to: \"Statistiche per\",\n      welcome_admin: \"Admin di benvenuto\"\n    },\n    editHouse: {\n      edit: \"Modifica casa\"\n    },\n    home: {\n      loading: \"Caricamento in corso...\"\n    },\n    house: {\n      add: \"Aggiungi contatore\",\n      edit: \"Modifica\",\n      nothing: \"Non ci sono dati da mostrare\",\n      off: \"Disattiva\",\n      on: \"Attiva\",\n      open: \"Apri\",\n      remove: \"Rimuovi\"\n    },\n    houseForm: {\n      city: \"Città\",\n      code: \"Codice\",\n      confirm: \"Conferma\",\n      country: \"Paese\",\n      name: \"Nome\",\n      postCode: \"Codice postale\",\n      street: \"Strada\"\n    },\n    houses: {\n      add: \"Aggiungi casa\",\n      edit: \"Modifica\",\n      houses: \"Abitazioni\",\n      nothing: \"Non ci sono dati da mostrare\",\n      open: \"Apri\",\n      remove: \"Rimuovi\"\n    },\n    login: {\n      email: \"E-mail\",\n      invalid_credentials: \"Hai compilato credenziali non valide\",\n      login: \"Accedi\",\n      new_user: \"Nuovo utente\",\n      password: \"Parola d'ordine\",\n      register: \"Registrati qui\",\n      sign_in: \"Accedi\"\n    },\n    menu: {\n      about: \"Informazioni\",\n      app_name: \"Smart Energy\",\n      home: \"Pagina iniziale\",\n      houses: \"Le mie case\",\n      login: \"Accedi\",\n      logout: \"Esci\",\n      register: \"Registrati\"\n    },\n    register: {\n      already_registered: \"Già registrata.\",\n      email: \"E-mail\",\n      err_confirm_password_required: \"Conferma password richiesta\",\n      err_first_name_required: \"Nome richiesto\",\n      err_invalid_email: \"E-mail non valida\",\n      err_invalid_phone: \"Lunghezza del telefono non valida\",\n      err_last_name_required: \"Cognome richiesto\",\n      err_password_not_same: \"Le password non sono le stesse\",\n      err_password_required: \"Password obbligatoria\",\n      err_pswds_match: \"Le password non corrispondono\",\n      first_name: \"Nome\",\n      last_name: \"Cognome\",\n      password: \"Parola d'ordine\",\n      password_conf: \"Conferma Password\",\n      phone: \"Telefono\",\n      register: \"Registrati\",\n      sign_in: \"Accedi\"\n    },\n    smartMeter: {\n      averagePowerConsumptionAtNight: \"Consumo energetico medio durante la notte\",\n      averagePowerConsumptionInDay: \"Consumo energetico medio in giorno\",\n      create: \"Crea\",\n      edit: \"Modifica\",\n      open: \"Apri\",\n      powerSpentForDate: \"Mostra la potenza speso per la data\",\n      remove: \"Rimuovi\",\n      totalPowerConsumption: \"Consumo energetico totale:\",\n      turnedOff: \"Disattivato\",\n      turnedOn: \"Acceso\"\n    },\n    smartMeterForm: {\n      confirm: \"Conferma\",\n      description: \"Descrizione\",\n      running: \"Acceso\"\n    }\n  }\n} ;\n\nexport default en;","import React, { FC, useState } from \"react\";\nimport i18n, {\n    languages,\n    languageLabels,\n    flags,\n    getSavedLng,\n    saveLng,\n} from \"../utils/i18\";\nimport { withTranslation } from \"react-i18next\";\nimport Flag from \"react-world-flags\";\nimport {\n    Typography,\n    Button,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n} from \"@material-ui/core\";\n\nconst LocMenu: FC = () => {\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [language, setLanguage] = useState<string>(getSavedLng() || \"en\");\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const changeLanguage = (lng: string) => {\n        setLanguage(lng);\n        i18n.changeLanguage(lng);\n        saveLng(lng);\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <Typography variant=\"button\" style={{ color: \"white\" }}>\n                    {language}\n                </Typography>\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {languages.length === 0 ? (\n                    <MenuItem />\n                ) : (\n                    languages.map((item, index) => (\n                        <MenuItem\n                            key={index}\n                            onClick={() => changeLanguage(item)}\n                        >\n                            <ListItemIcon>\n                                <Flag\n                                    code={flags[index]}\n                                    height=\"20\"\n                                    width=\"30\"\n                                />\n                            </ListItemIcon>\n                            {languageLabels[index]}\n                        </MenuItem>\n                    ))\n                )}\n            </Menu>\n        </div>\n    );\n};\n\nexport default withTranslation()(LocMenu);\n","export default class Config {\n    public static urlRestBase = \"http://localhost:8080/pa165/rest\";\n    public static userHome = \"/houses\";\n    public static adminHome = \"/dashboard\";\n}\n","import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport LoginUser from \"../interfaces/LoginUser\";\nimport Config from \"../utils/Config\";\nimport {createContext} from \"react\";\n\nconst tokenKey = \"token\";\n\ntype UserCtx = {\n    user: LoginUser | null;\n}\n\nexport const UserContext = createContext<UserCtx>({user: null});\n\nexport async function login(email: string, password: string) {\n    try {\n        const response = await axios({\n            method: \"POST\",\n            url: Config.urlRestBase + \"/user/login\",\n            data: {\n                userName: email,\n                password,\n            }\n        });\n\n        const jwt = response.data;\n        localStorage.setItem(tokenKey, jwt);\n        return response.status;\n    } catch (e) {\n        return e.response.status;\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n}\n\nexport async function register(\n        email: string,\n        password: string,\n        confirmPassword: string,\n        firstName: string,\n        lastName: string,\n        phone: string) {\n    try {\n        const response = await axios({\n            method: \"POST\",\n            url: Config.urlRestBase + \"/user/register\",\n            data: {\n                email,\n                password,\n                passwordConfirmation: confirmPassword,\n                firstName,\n                lastName,\n                phone\n            },\n        });\n\n        const jwt = response.data;\n        localStorage.setItem(tokenKey, jwt);\n        return response.status;\n    } catch (e) {\n        return e.response.status;\n    }\n}\n\nexport function getCurrentUser(): LoginUser | null {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        if (jwt != null) {\n            return jwtDecode(jwt);\n        }\n        return null;\n    } catch (ex) {\n        return null;\n    }\n}\n\nconst returnModule = {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n    UserContext,\n};\n\nexport default returnModule;\n","import React, {FC, useContext} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Menu from \"@material-ui/core/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { useTranslation } from \"react-i18next\";\nimport LocMenu from \"./LocMenu\";\nimport { MenuItem } from \"@material-ui/core\";\nimport {logout, UserContext} from \"../services/auth\";\n\n/*\n author: Michaela Horváthová\n*/\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    link: {\n        textDecoration: \"none\",\n        color: \"white\",\n    },\n}));\n\nconst BasicMenu: FC = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const { user } = useContext(UserContext);\n    const { t } = useTranslation();\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        logout();\n        window.location.href = \"/pa165\";\n    };\n\n    return (\n        <AppBar color=\"primary\" position=\"static\" variant=\"outlined\">\n            <Toolbar>\n                {user && <>\n                    <Button className={classes.menuButton}>\n                        <Link className={classes.link} to=\"/\">\n                            <b>{t(\"menu.home\")}</b>\n                        </Link>\n                    </Button>\n                </>}\n\n\n                <Button className={classes.menuButton}>\n                    <Link className={classes.link} to=\"/about\">\n                        <b>{t(\"menu.about\")}</b>\n                    </Link>\n                </Button>\n                {user && <>\n                    <Box display=\"flex\" flexGrow={1}>\n                        <Box\n                            display=\"flex\"\n                            m=\"auto\"\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                        >\n                            <Typography variant=\"h4\">\n                                {t(\"menu.app_name\")}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                    >\n                        <AccountCircleIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleLogout}>\n                            {t(\"menu.logout\")}\n                        </MenuItem>\n                    </Menu>\n                    <LocMenu />\n\n                </>}\n\n                {user === null && <>\n                    <Box display=\"flex\" flexGrow={1}>\n                        <Box\n                            display=\"flex\"\n                            m=\"auto\"\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                        >\n                            <Typography variant=\"h4\">\n                                {t(\"menu.app_name\")}\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Button className={classes.menuButton}>\n                        <Link className={classes.link} to=\"/login/\"><b>{t('menu.login')}</b></Link>\n                    </Button>\n                    <Button className={classes.menuButton}>\n                        <Link className={classes.link} to=\"/register/\"><b>{t('menu.register')}</b></Link>\n                    </Button>\n                    <LocMenu />\n\n                </>}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default BasicMenu;\n","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HouseDTO from \"../interfaces/HouseDTO\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nexport interface HouseTileProps {\n    house: HouseDTO;\n    onRemove(id: number): void;\n}\n\nconst useStyles = makeStyles({\n    running: {\n        minWidth: 300,\n        maxWidth: 345,\n    },\n    notRunning: { minWidth: 300, maxWidth: 345, backgroundColor: \"#f5f5f5\" },\n});\n\nconst HouseTile: FunctionComponent<HouseTileProps> = ({ house, onRemove }) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { address } = house;\n    const { t } = useTranslation();\n    const { id } = house;\n\n    return (\n        <Card\n            className={house.running ? classes.running : classes.notRunning}\n            variant=\"outlined\"\n        >\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {house.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {!address.street ? \"---\" : address.street}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {!address.code ? \"---\" : address.code}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {address.city}, {address.postCode}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {address.country}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => history.push(\"/house/\" + id)}\n                >\n                    {t(\"houses.open\")}\n                </Button>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => history.push(\"/house/edit/\" + id)}\n                >\n                    {t(\"houses.edit\")}\n                </Button>\n                <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={() => onRemove(id)}\n                >\n                    {t(\"houses.remove\")}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default HouseTile;\n","import { Grid } from \"@material-ui/core\";\nimport React, { FunctionComponent, Fragment } from \"react\";\nimport HouseDTO from \"../interfaces/HouseDTO\";\nimport HouseTile from \"./HouseTile\";\nimport { useTranslation } from \"react-i18next\";\n\nexport interface HouseListProps {\n    houses: Array<HouseDTO>;\n    onRemove(id: number): void;\n}\n\nconst HouseList: FunctionComponent<HouseListProps> = ({ houses, onRemove }) => {\n    const { t } = useTranslation();\n    return (\n        <Fragment>\n            <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n                {houses.length === 0 ? (\n                    <Grid item>{t(\"houses.nothing\")}</Grid>\n                ) : (\n                    \"\"\n                )}\n                {houses.map((house) => {\n                    return (\n                        <Grid key={house.id} item>\n                            <HouseTile house={house} onRemove={onRemove} />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default HouseList;\n","import React, { FunctionComponent, useEffect, useState, Fragment } from \"react\";\nimport HouseList from \"../components/HouseList\";\nimport HouseDTO from \"../interfaces/HouseDTO\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router\";\nimport { getCurrentUser } from \"../services/auth\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\n\nexport interface HousesProps {}\n\n/*\n  author: Patrik Valo\n*/\nconst Houses: FunctionComponent<HousesProps> = () => {\n    const [houses, setHouses] = useState<Array<HouseDTO>>([]);\n    const { t } = useTranslation();\n    const history = useHistory();\n\n    useEffect(() => {\n        const user = getCurrentUser();\n\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/houses/findByUser/${user?.id}`,\n        }).then((response) => {\n            const result: Array<HouseDTO> = response.data.map((obj: any) => {\n                return {\n                    id: obj.id,\n                    name: obj.name,\n                    address: {\n                        id: obj.address.id,\n                        city: obj.address.city,\n                        code: obj.address.code,\n                        country: obj.address.country,\n                        postCode: obj.address.postCode,\n                        street: obj.address.street,\n                    },\n                    smartMeters: obj.smartMeters,\n                    running: obj.running,\n                } as HouseDTO;\n            });\n            setHouses(result);\n        });\n    }, []);\n\n    const handleOnRemove = async (id: number) => {\n        await axios({\n            method: \"DELETE\",\n            url: Config.urlRestBase + `/houses/${id}`,\n        });\n        const updatedHouses = [...houses];\n        setHouses(updatedHouses.filter((house) => house.id !== id));\n    };\n\n    return (\n        <Fragment>\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                {t(\"houses.houses\")}\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disableElevation\n                        onClick={() => history.push(\"/house/create\")}\n                    >\n                        {t(\"houses.add\")}\n                    </Button>\n                </Grid>\n            </Grid>\n            <HouseList houses={houses} onRemove={handleOnRemove} />\n        </Fragment>\n    );\n};\n\nexport default Houses;\n","import { FC, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport red from \"@material-ui/core/colors/red\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Box from \"@material-ui/core/Box\";\n\nimport LocMenu from \"./LocMenu\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: \"none\",\n        color: red[900],\n        fontSize: \"20\",\n    },\n\n    title: {\n        flexGrow: 1,\n    },\n\n    button: {\n        borderRadius: \"2px\",\n        backgroundColor: \"darkgrey\",\n        \"&:hover\": {\n            backgroundColor: \"white\",\n        },\n    },\n\n    list: {\n        backgroundColor: \"white\",\n        borderStyle: \"none\",\n        boxShadow: \"none\",\n    },\n});\n\nconst MenuDrawerLeft: FC = () => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const { t } = useTranslation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Box display=\"flex\" flexGrow={1}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h4\" style={{ marginTop: \"8px\" }}>\n                            {t(\"menu.app_name\")}\n                        </Typography>\n                    </Box>\n                    <LocMenu />\n                </Toolbar>\n            </AppBar>\n            <Drawer variant=\"persistent\" anchor=\"left\" open={open}>\n                <div>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.list}>\n                    {\n                        <>\n                            <ListItem alignItems=\"flex-start\"></ListItem>\n                            <Divider />\n                            <ListItem divider alignItems=\"center\">\n                                <ListItemIcon>\n                                    {\" \"}\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <Link\n                                    className={classes.link}\n                                    to=\"/\"\n                                    onClick={handleDrawerClose}\n                                >\n                                    <b>{t(\"menu.home\")}</b>\n                                </Link>\n                            </ListItem>\n                            <ListItem divider>\n                                <ListItemIcon>\n                                    {\" \"}\n                                    <InfoIcon />{\" \"}\n                                </ListItemIcon>\n                                <Link\n                                    className={classes.link}\n                                    to=\"pa165/about/\"\n                                    onClick={handleDrawerClose}\n                                >\n                                    <b>{t(\"menu.about\")}</b>\n                                </Link>\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon>\n                                    {\" \"}\n                                    <CardGiftcardIcon></CardGiftcardIcon>{\" \"}\n                                </ListItemIcon>\n                                <Link\n                                    className={classes.link}\n                                    to=\"/list/\"\n                                    onClick={handleDrawerClose}\n                                >\n                                    <b>{t(\"menu.gift_lists\")}</b>\n                                </Link>\n                            </ListItem>\n                            <Divider />\n                            <Divider />\n\n                            <Divider />\n                        </>\n                    }\n                    {\n                        <>\n                            <ListItem divider>\n                                <ListItemIcon>\n                                    {\" \"}\n                                    <InfoIcon />{\" \"}\n                                </ListItemIcon>\n                                <Link\n                                    className={classes.link}\n                                    to=\"/about\"\n                                    onClick={handleDrawerClose}\n                                >\n                                    <b>{t(\"menu.about\")}</b>\n                                </Link>\n                            </ListItem>\n                            <Divider />\n                            <ListItem divider>\n                                <ListItemIcon>\n                                    {\" \"}\n                                    <AccountCircleIcon />{\" \"}\n                                </ListItemIcon>\n                                <Link\n                                    className={classes.link}\n                                    to=\"/login/\"\n                                    onClick={handleDrawerClose}\n                                >\n                                    <b>{t(\"menu.login\")}</b>\n                                </Link>\n                            </ListItem>\n                            <ListItem divider>\n                                <ListItemIcon>\n                                    {\" \"}\n                                    <PersonAddIcon />{\" \"}\n                                </ListItemIcon>\n                                <Link\n                                    className={classes.link}\n                                    to=\"/register/\"\n                                    onClick={handleDrawerClose}\n                                >\n                                    <b>{t(\"menu.register\")}</b>\n                                </Link>\n                            </ListItem>\n                        </>\n                    }\n                </List>\n            </Drawer>\n        </div>\n    );\n};\n\nexport default MenuDrawerLeft;\n","import React, { FC, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Alert from \"@material-ui/lab/Alert\"\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport { useTranslation } from \"react-i18next\";\nimport auth from \"../services/auth\";\n\n/*\n    Author: Michaela Horváthová\n*/\nconst useStyles = makeStyles({\n    app: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        minHeight: \"100vh\",\n    },\n    card: {\n        boxShadow: \"0 3px 5px 2px rgba(56, 56, 56, 0.83)\",\n        maxWidth: \"700px\",\n    },\n\n    text: {\n        alignContent: \"left\",\n    },\n\n    button: {\n        borderRadius: \"12px\",\n        flex: \"1\",\n    },\n});\n\nconst Login: FC = () => {\n    const classes = useStyles();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors] = useState<{[index: string]: string}>({});\n    const [beErrors, setBEErrors] = useState(false);\n    const { t } = useTranslation();\n\n    const handleLoginEvent = async () => {\n        let status = await auth.login(email, password);\n        if (status === 401) {\n            setBEErrors(true);\n            return;\n        }\n\n        window.location.href = \"/pa165\";\n    };\n\n    return (\n        <Grid container className={classes.app}>\n            <Card className={classes.card}>\n                <CardContent>\n                    <AccountBoxIcon style={{ fontSize: \"60\" }} />\n                    <Typography variant=\"h5\" component=\"h1\">\n                        {t(\"login.login\")}\n                    </Typography>\n                    <br/>\n                    {beErrors && <Alert variant=\"outlined\" severity=\"error\">{t(\"login.invalid_credentials\")}</Alert>}\n                    <TextField\n                        error={errors[\"username\"] != null}\n                        helperText={errors[\"username\"]}\n                        label={t(\"login.email\")}\n                        type=\"email\"\n                        name=\"email\"\n                        fullWidth\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <TextField\n                        error={errors[\"password\"] != null}\n                        helperText={errors[\"password\"]}\n                        label={t(\"login.password\")}\n                        type=\"password\"\n                        name=\"password\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </CardContent>\n                <CardActions className={classes.text}>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={handleLoginEvent}\n                    >\n                        {t(\"login.login\")}\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default Login;\n","import React, { FC, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport { useTranslation } from \"react-i18next\";\nimport auth from \"../services/auth\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n/*\n    Author: Michaela Horváthová\n*/\nconst useStyles = makeStyles({\n    app: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        minHeight: \"100vh\",\n    },\n    card: {\n        boxShadow: \"0 3px 5px 2px rgba(56, 56, 56, 0.83)\",\n        maxWidth: \"700px\",\n    },\n\n    text: {\n        alignContent: \"left\",\n    },\n\n    button: {\n        borderRadius: \"12px\",\n        flex: \"1\",\n    },\n});\n\nconst Registration: FC = () => {\n    const classes = useStyles();\n\n    const validate = () => {\n        let temp: {[index: string]: string;} = {\n            \"email\": (/.*@.*..*/).test(email) ? \"\" : t(\"register.err_invalid_email\"),\n            \"password\": password ? \"\" : t(\"register.err_password_required\"),\n            \"confirmPassword\": confirmPassword ? \"\" : t(\"register.err_confirm_password_required\"),\n            \"firstName\": firstName ? \"\" : t(\"register.err_first_name_required\"),\n            \"lastName\": lastName ? \"\" : t(\"register.err_last_name_required\"),\n            \"phone\": phone.length > 9 ? \"\" : t(\"register.err_invalid_phone\"),\n            \"passwordsSame\": password === confirmPassword ? \"\" : t(\"register.err_password_not_same\")\n        };\n\n        setErrors({...temp});\n        return Object.values(temp).every(x => x === \"\");\n    }\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [errors, setErrors] = useState<{[index: string]: string}>({});\n    const [beErrors, setBEErrors] = useState(false);\n\n    const { t } = useTranslation();\n\n    const handleLoginEvent = async () => {\n        if (validate()) {\n            let status = await auth.register(email, password, confirmPassword, firstName, lastName, phone);\n            if (status === 409) {\n                setBEErrors(true);\n                return;\n            }\n            window.location.href = \"/pa165\";\n        }\n    };\n\n    return (\n        <Grid container className={classes.app}>\n            <Card className={classes.card}>\n                <CardContent>\n                    <AccountBoxIcon style={{ fontSize: \"60\" }} />\n                    <Typography variant=\"h5\" component=\"h1\">\n                        {t(\"register.register\")}\n                    </Typography>\n                    {beErrors && <Alert variant=\"outlined\" severity=\"error\">{t(\"register.already_registered\")}</Alert>}\n                    <TextField\n                        error={errors[\"email\"] != null}\n                        helperText={errors[\"email\"]}\n                        label={t(\"register.email\")}\n                        type=\"text\"\n                        name=\"email\"\n                        fullWidth\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <TextField\n                        error={errors[\"password\"] != null}\n                        helperText={errors[\"password\"]}\n                        label={t(\"register.password\")}\n                        type=\"password\"\n                        name=\"password\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <TextField\n                        error={errors[\"confirmPassword\"] != null || errors[\"passwordsSame\"] != null}\n                        helperText={errors[\"confirmPassword\"] === \"\" ? errors[\"passwordsSame\"] : errors[\"confirmPassword\"]}\n                        label={t(\"register.password_conf\")}\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <TextField\n                        error={errors[\"firstName\"] != null}\n                        helperText={errors[\"firstName\"]}\n                        label={t(\"register.first_name\")}\n                        type=\"text\"\n                        name=\"firstName\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                    <TextField\n                        error={errors[\"lastName\"] != null}\n                        helperText={errors[\"lastName\"]}\n                        label={t(\"register.last_name\")}\n                        type=\"text\"\n                        name=\"lastName\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                    <TextField\n                        error={errors[\"phone\"] != null}\n                        helperText={errors[\"phone\"]}\n                        label={t(\"register.phone\")}\n                        type=\"text\"\n                        name=\"phone\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        value={phone}\n                        onChange={(e) => setPhone(e.target.value)}\n                    />\n                </CardContent>\n                <CardActions className={classes.text}>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={handleLoginEvent}\n                    >\n                        {t(\"register.register\")}\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default Registration;\n","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useHistory} from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport SmartMeterHouseDTO from \"../interfaces/SmartMeterHouseDTO\";\n\n\n/*\n  author: Matej Rišňovský\n*/\nexport interface SmartMeterTileProps {\n    smartMeter: SmartMeterHouseDTO;\n    onRemove(id: number): void;\n}\n\nconst useStyles = makeStyles({\n    running: {\n        minWidth: 300,\n        maxWidth: 345,\n    },\n    notRunning: { minWidth: 300, maxWidth: 345, backgroundColor: \"#f5f5f5\" },\n});\n\nconst SmartMeterTile: FunctionComponent<SmartMeterTileProps> = ({\n    smartMeter,\n    onRemove,\n}) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { t } = useTranslation();\n    const { id } = smartMeter;\n\n    return (\n        <Card\n            className={\n                smartMeter.running ? classes.running : classes.notRunning\n            }\n            variant=\"outlined\"\n        >\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {!smartMeter.smartMeterDescription\n                        ? \"---\"\n                        : smartMeter.smartMeterDescription}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {smartMeter.cumulativePowerConsumption + \" kwH\"}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {smartMeter.running ? t(\"smartMeter.turnedOn\") : t(\"smartMeter.turnedOff\")}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => history.push(\"/smartMeter/\" + id)}\n                >\n                    {t(\"smartMeter.open\")}\n                </Button>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => history.push(\"/smartMeter/edit/\" + id)}\n                >\n                    {t(\"smartMeter.edit\")}\n                </Button>\n                <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={() => onRemove(id)}\n                >\n                    {t(\"smartMeter.remove\")}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default SmartMeterTile;\n","import { Grid } from \"@material-ui/core\";\nimport React, { FunctionComponent, Fragment } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport SmartMeterTile from \"./SmartMeterTile\";\nimport SmartMeterHouseDTO from \"../interfaces/SmartMeterHouseDTO\";\n\n/*\n  author: Matej Rišňovský\n*/\n\nexport interface SmartMeterListProps {\n    smartMeters: Array<SmartMeterHouseDTO>;\n    onRemove(id: number): void;\n}\n\nconst SmartMeterList: FunctionComponent<SmartMeterListProps> = ({\n    smartMeters,\n    onRemove,\n}) => {\n    const { t } = useTranslation();\n    return (\n        <Fragment>\n            <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n                {smartMeters.length === 0 ? (\n                    <Grid item>{t(\"house.nothing\")}</Grid>\n                ) : (\n                    \"\"\n                )}\n                {smartMeters.map((smartMeter) => {\n                    return (\n                        <Grid key={smartMeter.id} item>\n                            <SmartMeterTile\n                                smartMeter={smartMeter}\n                                onRemove={onRemove}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default SmartMeterList;\n","import React, { Fragment, FunctionComponent, useEffect, useState } from \"react\";\nimport { Button, ButtonGroup, Grid, Typography } from \"@material-ui/core\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport HouseDTO from \"../interfaces/HouseDTO\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\nimport SmartMeterList from \"../components/SmartMeterList\";\nimport SmartMeterHouseDTO from \"../interfaces/SmartMeterHouseDTO\";\nimport { useTranslation } from \"react-i18next\";\n\nexport interface HousePageProps {}\n\n/*\n  author: Patrik Valo\n*/\nconst HousePage: FunctionComponent<HousePageProps> = () => {\n    const { id } = useParams<{ id: string }>();\n    const { t } = useTranslation();\n    const history = useHistory();\n    const [house, setHouse] = useState<HouseDTO | null>();\n    const [smartMeters, setSmartMeters] = useState<Array<SmartMeterHouseDTO>>(\n        []\n    );\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/houses/${id}`,\n        }).then((response) => {\n            console.log(response.data);\n            setHouse({\n                id: response.data.id,\n                name: response.data.name,\n                address: {\n                    id: response.data.address.id,\n                    city: response.data.address.city,\n                    code: response.data.address.code,\n                    country: response.data.address.country,\n                    postCode: response.data.address.postCode,\n                    street: response.data.address.street,\n                },\n                smartMeters: response.data.smartMeters,\n                running: response.data.running,\n            });\n\n            setSmartMeters(response.data.smartMeters);\n        });\n    }, [id]);\n\n    const handleOnClick = () => {\n        if (house) {\n            axios({\n                method: \"PUT\",\n                url: Config.urlRestBase + `/houses/running/${id}`,\n                data: { running: !house.running },\n            }).then((response) => {\n                setHouse({\n                    id: response.data.id,\n                    name: response.data.name,\n                    address: {\n                        id: response.data.address.id,\n                        city: response.data.address.city,\n                        code: response.data.address.code,\n                        country: response.data.address.country,\n                        postCode: response.data.address.postCode,\n                        street: response.data.address.street,\n                    },\n                    smartMeters: response.data.smartMeters,\n                    running: response.data.running,\n                });\n\n                setSmartMeters(response.data.smartMeters);\n            });\n        }\n    };\n\n    const handleOnRemove = async (id: number) => {\n        await axios({\n            method: \"DELETE\",\n            url: Config.urlRestBase + `/smartmeters/${id}`,\n        });\n        const updatedMeters = [...smartMeters];\n        setSmartMeters(\n            updatedMeters.filter((smartMeter) => smartMeter.id !== id)\n        );\n    };\n\n    return (\n        <Fragment>\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                {house?.name}\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item>\n                    <ButtonGroup\n                        variant=\"contained\"\n                        disableElevation\n                        aria-label=\"contained button group\"\n                    >\n                        <Button\n                            color=\"primary\"\n                            onClick={() => history.push(`/smartMeter/create?houseId=${id}`)}\n                        >\n                            {t(\"house.add\")}\n                        </Button>\n                        <Button color=\"secondary\" onClick={handleOnClick}>\n                            {house?.running ? t(\"house.off\") : t(\"house.on\")}\n                        </Button>\n                    </ButtonGroup>\n                </Grid>\n            </Grid>\n            <SmartMeterList\n                smartMeters={smartMeters}\n                onRemove={handleOnRemove}\n            />\n        </Fragment>\n    );\n};\n\nexport default HousePage;\n","import { FunctionComponent, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HouseDTO from \"../interfaces/HouseDTO\";\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nexport interface HouseFormProps {\n    house?: HouseDTO;\n    onSubmit(\n        name: string,\n        street: string,\n        code: string,\n        city: string,\n        postCode: string,\n        country: string\n    ): void;\n}\n\nconst useStyles = makeStyles({\n    button: {\n        marginTop: 15,\n    },\n});\n\nconst HouseForm: FunctionComponent<HouseFormProps> = ({ house, onSubmit }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const [name, setName] = useState<string>(house ? house.name : \"\");\n    const [street, setStreet] = useState<string>(\n        house ? (house.address.street ? house.address.street : \"\") : \"\"\n    );\n    const [code, setCode] = useState<string>(\n        house ? (house.address.code ? house.address.code : \"\") : \"\"\n    );\n    const [city, setCity] = useState<string>(house ? house.address.city : \"\");\n    const [postCode, setPostCode] = useState<string>(\n        house ? house.address.postCode : \"\"\n    );\n    const [country, setCountry] = useState<string>(\n        house ? house.address.country : \"\"\n    );\n\n    const handleOnClick = () => {\n        // validate not null items\n        if (!name || !city || !postCode || !country) {\n            return;\n        }\n\n        onSubmit(name, street, code, city, postCode, country);\n    };\n\n    return (\n        <Grid item xs={12}>\n            <TextField\n                error={!name}\n                required\n                size=\"small\"\n                label={t(\"houseForm.name\")}\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n                label={t(\"houseForm.street\")}\n                size=\"small\"\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={street}\n                onChange={(e) => setStreet(e.target.value)}\n            />\n            <TextField\n                label={t(\"houseForm.code\")}\n                size=\"small\"\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={code}\n                onChange={(e) => setCode(e.target.value)}\n            />\n            <TextField\n                error={!city}\n                required\n                label={t(\"houseForm.city\")}\n                size=\"small\"\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n            />\n            <TextField\n                error={!postCode}\n                required\n                label={t(\"houseForm.postCode\")}\n                size=\"small\"\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={postCode}\n                onChange={(e) => setPostCode(e.target.value)}\n            />\n            <TextField\n                error={!country}\n                required\n                label={t(\"houseForm.country\")}\n                size=\"small\"\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n            />\n            <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n                disableElevation\n                disabled={!name || !city || !postCode || !country}\n                onClick={handleOnClick}\n            >\n                {t(\"houseForm.confirm\")}\n            </Button>\n        </Grid>\n    );\n};\n\nexport default HouseForm;\n","import React, { Fragment, FunctionComponent, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport HouseDTO from \"../interfaces/HouseDTO\";\nimport HouseForm from \"../components/HouseForm\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\n\nexport interface EditHouseProps {}\n\n/*\n  author: Patrik Valo\n*/\nconst EditHouse: FunctionComponent<EditHouseProps> = () => {\n    const { id } = useParams<{ id: string }>();\n    const [house, setHouse] = useState<HouseDTO | null>();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/houses/${id}`,\n        }).then((response) => {\n            setHouse({\n                id: response.data.id,\n                name: response.data.name,\n                address: {\n                    id: response.data.address.id,\n                    city: response.data.address.city,\n                    code: response.data.address.code,\n                    country: response.data.address.country,\n                    postCode: response.data.address.postCode,\n                    street: response.data.address.street,\n                },\n                smartMeters: response.data.smartMeters,\n                running: response.data.running,\n            });\n        });\n    }, [id]);\n\n    const handleOnSubmit = async (\n        name: string,\n        street: string,\n        code: string,\n        city: string,\n        postCode: string,\n        country: string\n    ) => {\n        await axios({\n            method: \"PUT\",\n            url: Config.urlRestBase + `/houses/${id}`,\n            data: {\n                name,\n                street: !street ? null : street,\n                code: !code ? null : code,\n                city,\n                postCode,\n                country,\n            },\n        });\n        history.push(\"/houses\");\n    };\n\n    return (\n        <Fragment>\n            <Typography variant=\"h4\" component=\"h2\">\n                {t(\"editHouse.edit\")} #{house?.id}\n            </Typography>\n            <Grid container spacing={3}>\n                {house ? (\n                    <HouseForm house={house} onSubmit={handleOnSubmit} />\n                ) : (\n                    \"\"\n                )}\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default EditHouse;\n","import { Fragment, FunctionComponent } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport HouseForm from \"../components/HouseForm\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\nimport { getCurrentUser } from \"../services/auth\";\n\nexport interface AddHouseProps {}\n\n/*\n  author: Patrik Valo\n*/\nconst AddHouse: FunctionComponent<AddHouseProps> = () => {\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const handleOnSubmit = async (\n        name: string,\n        street: string,\n        code: string,\n        city: string,\n        postCode: string,\n        country: string\n    ) => {\n        const user = getCurrentUser();\n        await axios({\n            method: \"POST\",\n            url: Config.urlRestBase + \"/houses/create\",\n            data: {\n                name,\n                street: !street ? null : street,\n                code: !code ? null : code,\n                city,\n                postCode,\n                country,\n                running: true,\n                portalUserId: user?.id,\n            },\n        });\n        history.push(\"/houses\");\n    };\n\n    return (\n        <Fragment>\n            <Typography variant=\"h4\" component=\"h2\">\n                {t(\"addHouse.add\")}\n            </Typography>\n            <Grid container spacing={3}>\n                <HouseForm onSubmit={handleOnSubmit} />\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default AddHouse;\n","import React, { Fragment, FunctionComponent, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\nimport { useTranslation } from \"react-i18next\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport SmartMeterStatisticsDTO from \"../interfaces/SmartMeterStatisticsDTO\";\nimport SmartMeterPowerSpentForDate from \"../interfaces/SmartMeterPowerSpentForDate\";\n\nexport interface SmartMeterDetailProps {}\n\n/*\n  author: Matej Rišňovský\n*/\nconst SmartMeterDetail: FunctionComponent<SmartMeterDetailProps> = () => {\n    const { id } = useParams<{ id: string }>();\n    const { t } = useTranslation();\n    const [smartMeterPowerSpentInDate, setSmartMeterPowerSpentInDate] = useState<SmartMeterPowerSpentForDate | null>();\n    const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n        new Date(Date.now()),\n    );\n    const [smartMeterStats, setSmartMeterStats] = useState<SmartMeterStatisticsDTO | null>();\n\n    const handleDateChange = (date: Date | null) => {\n        setSelectedDate(date);\n\n        axios({\n            method: \"POST\",\n            url: Config.urlRestBase + `/smartmeters/powerSpent/${id}`,\n            data: {\n                day: date?.getDate(),\n                month: date?.getMonth(),\n                year: date?.getFullYear()\n            },\n        }).then((response) => {\n            setSmartMeterPowerSpentInDate({\n                result : response.data\n            });\n        });\n    };\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/smartmeters/statistics/${id}`,\n        }).then((response) => {\n            console.log(response.data);\n            setSmartMeterStats({\n                smartMeterDescription: response.data.smartMeterDescription,\n                running: response.data.running,\n                cumulativePowerConsumption: response.data.cumulativePowerConsumption,\n                averageSpentPerDay: response.data.averageSpentPerDay,\n                averageSpentPerNight: response.data.averageSpentPerNight\n            });\n        });\n    }, [id]);\n\n    return (\n        <Fragment>\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                {smartMeterStats?.smartMeterDescription}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                { smartMeterStats?.running ? t(\"smartMeter.turnedOn\") : t(\"smartMeter.turnedOff\")}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                { t(\"smartMeter.totalPowerConsumption\") + \" \" + smartMeterStats?.cumulativePowerConsumption + \" kwH\"}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                { t(\"smartMeter.averagePowerConsumptionInDay\") + \" \" + smartMeterStats?.averageSpentPerDay + \" kwH\"}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                { t(\"smartMeter.averagePowerConsumptionAtNight\") + \" \" + smartMeterStats?.averageSpentPerNight + \" kwH\"}\n            </Typography>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label={t(\"smartMeter.powerSpentForDate\")}\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {smartMeterPowerSpentInDate?.result === undefined ? \"\" :  smartMeterPowerSpentInDate?.result + \" kwH\"}\n                </Typography>\n            </MuiPickersUtilsProvider>\n            <Grid container spacing={3}>\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default SmartMeterDetail;\n","import { FunctionComponent, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SmartMeterHouseDTO from \"../interfaces/SmartMeterHouseDTO\";\nimport { Button, Grid, TextField, Checkbox } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\n/*\n  author: Matej Rišňovský\n*/\n\nexport interface SmartMeterFormProps {\n    smartMeter ?: SmartMeterHouseDTO;\n    onSubmit(\n        smartMeterDescription: string,\n        isRunning: boolean\n    ): void;\n}\n\nconst useStyles = makeStyles({\n    button: {\n        marginTop: 15,\n    },\n});\n\nconst SmartMeterForm: FunctionComponent<SmartMeterFormProps> = ({ smartMeter, onSubmit }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const [smartMeterDescription, setSmartMeterDescription] = useState<string>(smartMeter ? smartMeter.smartMeterDescription : \"\");\n    const [isRunning, setIsRunning] = useState<boolean>(smartMeter ? smartMeter.running : false);\n\n    const handleOnClick = () => {\n        onSubmit(smartMeterDescription, isRunning);\n    };\n\n    return (\n        <Grid item xs={12}>\n            <TextField\n                size=\"small\"\n                label={t(\"smartMeterForm.description\")}\n                type=\"text\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={smartMeterDescription}\n                onChange={(e) => setSmartMeterDescription(e.target.value)}\n            />\n            <Checkbox\n                checked={isRunning}\n                name={t(\"smartMeterForm.running\")}\n                onChange={(e) => setIsRunning(e.target.checked)}\n            />\n            <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n                disableElevation\n                onClick={handleOnClick}\n            >\n                {t(\"smartMeterForm.confirm\")}\n            </Button>\n        </Grid>\n    );\n};\n\nexport default SmartMeterForm;\n","import React, { Fragment, FunctionComponent, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport SmartMeterForm from \"../components/SmartMeterForm\";\nimport {useHistory} from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\nimport SmartMeterHouseDTO from \"../interfaces/SmartMeterHouseDTO\";\n\nexport interface EditSmartMeterProps {}\n\n/*\n  author: Matej Rišňovský\n*/\nconst EditSmartMeter: FunctionComponent<EditSmartMeterProps> = () => {\n    const { id } = useParams<{ id: string }>();\n    const [smartMeter, setSmartMeter] = useState<SmartMeterHouseDTO | null>();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/smartmeters/${id}`,\n        }).then((response) => {\n            console.log(response);\n            setSmartMeter({\n                id: response.data.id,\n                smartMeterDescription: response.data.smartMeterDescription,\n                running: response.data.running,\n                powerConsumptionSinceLastLog: response.data.powerConsumptionSinceLastLog,\n                cumulativePowerConsumption: response.data.cumulativePowerConsumption,\n                lastLogTakenAt: response.data.lastLogTakenAt,\n                houseId : response.data.houseId\n            });\n        });\n    }, [id]);\n\n    const handleOnSubmit = async (\n        smartMeterDescription : string,\n        running: boolean,\n    ) => {\n        await axios({\n            method: \"PUT\",\n            url: Config.urlRestBase + `/smartmeters/${id}`,\n            data: {\n                smartMeterDescription,\n                running\n            },\n        });\n        history.push(`/house/${smartMeter?.houseId}`);\n    };\n\n    return (\n        <Fragment>\n            <Typography variant=\"h4\" component=\"h2\">\n                {t(\"smartMeter.edit\")} '{smartMeter?.smartMeterDescription}'\n            </Typography>\n            <Grid container spacing={3}>\n                {smartMeter ? (\n                    <SmartMeterForm smartMeter={smartMeter} onSubmit={handleOnSubmit} />\n                ) : (\n                    \"\"\n                )}\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default EditSmartMeter;\n","import React, { Fragment, FunctionComponent } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport SmartMeterForm from \"../components/SmartMeterForm\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\n\nexport interface AddSmartMeterProps {}\n\n/*\n  author: Matej Rišňovský\n*/\nconst AddSmartMeter: FunctionComponent<AddSmartMeterProps> = () => {\n    const {search} = useLocation();\n    const houseId: number = +search.split(\"houseId=\")[1];\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const handleOnSubmit = async (\n        smartMeterDescription : string,\n        running: boolean,\n    ) => {\n        await axios({\n            method: \"POST\",\n            url: Config.urlRestBase + `/smartmeters/create`,\n            data: {\n                houseId : houseId,\n                smartMeterDescription,\n                running\n            },\n        });\n        history.push(`/house/${houseId}`);\n    };\n\n    return (\n        <Fragment>\n            <Typography variant=\"h4\" component=\"h2\">\n                {t(\"smartMeter.create\")}\n            </Typography>\n            <Grid container spacing={3}>\n                <SmartMeterForm onSubmit={handleOnSubmit} />\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default AddSmartMeter;\n","import React, { FunctionComponent } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { getCurrentUser } from \"../services/auth\";\nimport Config from \"../utils/Config\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n    // when role is not defined, it allowed for both\n    role?: \"User\" | \"Administrator\";\n}\n\nconst ProtectedRoute: FunctionComponent<ProtectedRouteProps> = ({\n    role,\n    exact,\n    path,\n    render,\n    component: Component,\n    ...other\n}) => {\n    return (\n        <Route\n            {...other}\n            exact={exact}\n            path={path}\n            render={(props) => {\n                const user = getCurrentUser();\n                if (!user) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/about\",\n                                state: { from: props.location },\n                            }}\n                        />\n                    );\n                }\n\n                if (role && user.role !== role) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname:\n                                    user.role === \"User\"\n                                        ? Config.userHome\n                                        : Config.adminHome,\n                                state: { from: props.location },\n                            }}\n                        />\n                    );\n                }\n\n                if (Component) {\n                    return <Component {...props} />;\n                }\n\n                if (render) {\n                    return render(props);\n                }\n\n                throw new Error(\"Component or render must be initializet\");\n            }}\n        />\n    );\n};\n\nexport default ProtectedRoute;\n","import StatisticDTO from \"./StatisticDTO\";\n\nexport default class StatisticsDTO {\n    from : Date|null = null;\n    to: Date|null = null;\n    totalSpent: number = 0;\n    averageSpent: number = 0;\n    statistics: Array<StatisticDTO> = [];\n}","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Typography from \"@material-ui/core/Typography\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Button, Card, CardContent} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport axios from \"axios\";\nimport Config from \"../utils/Config\";\nimport StatisticsDTO from \"../interfaces/StatisticsDTO\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport StatisticDTO from \"../interfaces/StatisticDTO\";\n\n/*\n  author: Martin Podhora\n*/\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof StatisticDTO;\n    label: string;\n    numeric: boolean;\n}\n\ninterface EnhancedTableProps {\n    classes: ReturnType<typeof useStyles>;\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof StatisticDTO) => void;\n    order: Order;\n    orderBy: string;\n    rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n    const { t } = useTranslation();\n\n    const headCells: HeadCell[] = [\n        { id: 'userName', numeric: false, disablePadding: false, label: t(\"dashboard.table_username\") },\n        { id: 'fromToTotalSpent', numeric: true, disablePadding: false, label: t(\"dashboard.table_total_spent\") },\n        { id: 'fromToAverageSpent', numeric: true, disablePadding: false, label: t(\"dashboard.table_average_spent\") }\n    ];\n\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property: keyof StatisticDTO) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n        button: {\n            borderRadius: \"12px\",\n            flex: \"1\",\n            top: 20,\n        },\n        cardroot: {\n            minWidth: 275,\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 20,\n            fontWeight: 'bold',\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    }),\n);\n\nexport const getFromDate = (from: Date|null) => {\n    return from === null ? null : from.toISOString();\n}\n\nexport const getToDate = (to: Date|null) => {\n    return to === null ? null : to.toISOString();\n}\n\nexport interface UsersProps {}\n\nconst Dashboard: FunctionComponent<UsersProps> = () => {\n    const [from, setFrom] = React.useState<Date | null>(null);\n    const [to, setTo] = React.useState<Date | null>(null);\n    const [statistics, setStatistics] = useState<StatisticsDTO>(new StatisticsDTO());\n    const { t } = useTranslation();\n\n    const handleFromDateChange = (date: Date | null) => {\n        setFrom(date);\n    };\n    const handleToDateChange = (date: Date | null) => {\n        setTo(date);\n    };\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/statistics/${getFromDate(from)}/${getToDate(to)}`,\n        }).then((response) => {\n            const result: StatisticsDTO = response.data as StatisticsDTO;\n            setStatistics(result);\n            setRows(result.statistics);\n        });\n    }, [from ,to]);\n\n    const handleGetStatisticsEvent = async () => {\n        axios({\n            method: \"GET\",\n            url: Config.urlRestBase + `/statistics/${getFromDate(from)}/${getToDate(to)}`,\n        }).then((response) => {\n            const result: StatisticsDTO = response.data as StatisticsDTO;\n            setStatistics(result);\n            setRows(result.statistics);\n        });\n    };\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof StatisticDTO>('userName');\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [rows, setRows] = React.useState<StatisticDTO[]>([]);\n\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof StatisticDTO) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n    return (\n        <div>\n            <Typography variant={\"h3\"} align={\"center\"}>\n                {t(\"dashboard.welcome_admin\")}\n            </Typography>\n            <Card className={classes.cardroot}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n                        {t(\"dashboard.all_time_statistics\")}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {t(\"dashboard.all_time_total\")}: {statistics.totalSpent}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {t(\"dashboard.all_time_average\")}: {statistics.averageSpent}\n                    </Typography>\n                </CardContent>\n            </Card>\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline-2\"\n                    label={t(\"dashboard.user_stats_from\")}\n                    value={from}\n                    onChange={handleFromDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label={t(\"dashboard.user_stats_to\")}\n                    value={to}\n                    onChange={handleToDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                <Button\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={handleGetStatisticsEvent}\n                >\n                    {t(\"dashboard.get_statistics\")}\n                </Button>\n            </MuiPickersUtilsProvider>\n\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    <TableContainer>\n                        <Table\n                            className={classes.table}\n                            aria-labelledby={t(\"dashboard.user_statistics\")}\n                            size={'medium'}\n                            aria-label=\"enhanced table\"\n                        >\n                            <EnhancedTableHead\n                                classes={classes}\n                                order={order}\n                                orderBy={orderBy}\n                                onRequestSort={handleRequestSort}\n                                rowCount={rows.length}\n                            />\n                            <TableBody>\n                                {stableSort(rows, getComparator(order, orderBy))\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map((row, index) => {\n                                        return (\n                                            <TableRow key={index}>\n                                                <TableCell align=\"left\">{row.userName}</TableCell>\n                                                <TableCell align=\"right\">{row.fromToTotalSpent}</TableCell>\n                                                <TableCell align=\"right\">{row.fromToAverageSpent}</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                        <TableCell colSpan={6} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={rows.length}\n                        labelRowsPerPage={t(\"dashboard.rows_per_page\")}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </Paper>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import { FC } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { Route, Redirect, Switch, HashRouter } from \"react-router-dom\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport About from \"./pages/About\";\nimport BasicMenu from \"./components/BasicMenu\";\nimport Houses from \"./pages/Houses\";\nimport MenuDrawerLeft from \"./components/MenuDrawerLeft\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Registration\";\nimport HousePage from \"./pages/HousePage\";\nimport EditHouse from \"./pages/EditHouse\";\nimport AddHouse from \"./pages/AddHouse\";\nimport SmartMeterDetail from \"./pages/SmartMeterDetail\";\nimport EditSmartMeter from \"./pages/EditSmartMeter\";\nimport AddSmartMeter from \"./pages/AddSmartMeter\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Config from \"./utils/Config\";\nimport Dashboard from \"./pages/Dashboard\";\nimport {UserContext, getCurrentUser} from \"./services/auth\";\n\n/*\n  author: Michaela Horváthová\n*/\nconst ourTheme = createMuiTheme({});\nconst App: FC = () => {\n    const user = getCurrentUser();\n\n    return (\n        <MuiThemeProvider theme={ourTheme}>\n            <UserContext.Provider value={{user}}>\n            <HashRouter>\n                <Hidden xsDown>\n                    <BasicMenu />\n                </Hidden>\n                <Hidden smUp>\n                    <MenuDrawerLeft />\n                </Hidden>\n\n                <main className=\"App\" style={{ marginTop: 50 }}>\n                    <Container maxWidth=\"lg\">\n                        <Switch>\n                            <Route exact path=\"/about\" component={About} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/register\" component={Register} />\n\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path={Config.userHome}\n                                component={Houses}\n                            />\n                            <ProtectedRoute\n                                role=\"Administrator\"\n                                exact\n                                path={Config.adminHome}\n                                component={Dashboard}\n                            />\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path=\"/house/edit/:id\"\n                                component={EditHouse}\n                            />\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path=\"/house/create\"\n                                component={AddHouse}\n                            />\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path=\"/house/:id\"\n                                component={HousePage}\n                            />\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path=\"/smartmeter/edit/:id\"\n                                component={EditSmartMeter}\n                            />\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path=\"/smartmeter/create\"\n                                component={AddSmartMeter}\n                            />\n                            <ProtectedRoute\n                                role=\"User\"\n                                exact\n                                path=\"/smartmeter/:id\"\n                                component={SmartMeterDetail}\n                            />\n                            <Redirect from=\"/\" to=\"/houses\" />\n                        </Switch>\n                    </Container>\n                </main>\n            </HashRouter>\n            </UserContext.Provider>\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport './utils/i18';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}